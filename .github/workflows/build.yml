---

name: Build VM Disk Image

"on":
  push:
    branches:
      - "*"
    tags:
      - "v*"
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.version }} ${{ matrix.architecture.name }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        version:
          - "14.1"

        architecture:
          - name: x86-64
            qemu: x86

          - name: arm64
            qemu: aarch64

    steps:
      - name: Maximize build space
        if: runner.os == "Linux"
        uses: AdityaGarg8/remove-unwanted-software@8831c82abf29b34eb2caac48d5f999ecfc0d8eef
        with:
          remove-android: "true"
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
          remove-large-packages: "true"
          remove-cached-tools: "true"

      - name: Concatenates the free space on / and /mnt
        if: runner.os == "Linux"
        uses: easimon/maximize-build-space@fc881a613ad2a34aca9c9624518214ebc21dfc0c
        with:
          root-reserve-mb: 10240
          temp-reserve-mb: 100
          swap-size-mb: 4096

      - name: Show df
        run: |
          df -h
          pwd

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Dependencies
        run: |
          sudo apt update && \
          sudo apt install curl jq unzip \
          "qemu-system-${{ matrix.architecture.qemu }}" -y

      - uses: hashicorp/setup-packer@main
        with:
          version: "1.9.1"

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true

      - name: Install UEFI
        if: matrix.architecture.name == "arm64"
        run: sudo cp "$(cat /usr/share/qemu/firmware/60-edk2-aarch64.json | jq .mapping.executable.filename -r)" edk2-aarch64-code.fd

      - name: Build Image
        if: "!matrix.copy_from_previous_release"
        env:
          PACKER_LOG: 1
        shell: sh
        run: |
          MEMORY=8192

          # the VM does not boot on aarch64:
          # qemu-system-aarch64: Addressing limited to 32 bits
          if [ ${{ matrix.architecture.name }} = "arm64" ]; then

            # max memory when hardware acceleration on Apple Silicon is enabled
            MEMORY=3072
          fi
          packer init freebsd.pkr.hcl
          ./build.sh '${{ matrix.version }}' '${{ matrix.architecture.name }}' \
            -var 'headless=true' \
            -var 'disk_size=34' \
            -var "memory=${MEMORY}"

      - name: Copy from previous release
        if: matrix.copy_from_previous_release
        run: |
          curl -O -L \
            --retry 3 \
            --create-dirs \
            --output-dir output \
            https://github.com/cross-platform-actions/freebsd-builder/releases/download/v0.5.0/freebsd-${{ matrix.version }}-${{ matrix.architecture.name }}.qcow2

      - name: Extract Version
        id: version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          name: FreeBSD ${{ steps.version.outputs.VERSION }}
          draft: true
          files: output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
